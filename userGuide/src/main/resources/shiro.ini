[main]
#dataSource
dataSource = com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName = ${shiro.driverClassName}
dataSource.url = ${shiro.url}
dataSource.username = ${shiro.username}
dataSource.password = ${shiro.password}

#credentialsMatche
credentialsMatcher = frame.plugin.shiro.RetryLimitHashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = md5
credentialsMatcher.hashIterations = 2
credentialsMatcher.storedCredentialsHexEncoded = true

#jdbcRealm
jdbcRealm = frame.plugin.shiro.MyJdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.saltStyle = COLUMN
jdbcRealm.authenticationQuery = SELECT password, salt FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT r.role FROM roles AS r, user_roles AS ur WHERE r.id = ur.role_id AND ur.user_id = (SELECT id FROM users WHERE username = ?)
jdbcRealm.permissionsQuery = SELECT p.permission FROM permissions AS p, roles_permissions AS rp WHERE p.id = rp.permission_id AND rp.role_id = (SELECT id FROM roles WHERE role = ?)
jdbcRealm.dataSource = $dataSource
jdbcRealm.credentialsMatcher = $credentialsMatcher
securityManager.realm = $jdbcRealm

#cache
shiroCacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
shiroCacheManager.cacheManagerConfigFile = classpath:ehcache-shiro.xml
securityManager.cacheManager = $shiroCacheManager

#sessionManager
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

#session
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionDAO.activeSessionsCacheName = shiro-activeSessionCache
securityManager.sessionManager.sessionDAO = $sessionDAO

#Default is 3,600,000 millis = 1 hour:
sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
sessionValidationScheduler.interval = 3600000
securityManager.sessionManager.sessionValidationScheduler = $sessionValidationScheduler
securityManager.sessionManager.globalSessionTimeout = 3600000000

[users]  
#提供了对用户/密码及其角色的配置，用户名=密码，角色1，角色2

[roles]  
#提供了角色及权限之间关系的配置，角色=权限1，权限2

[urls]
#用于web，提供了对web url拦截相关的配置，url=拦截器[参数]，拦截器
#/security/login = anon
#/security/logout = logout
#/** = authc
# /login = anon
# /roles/** = anon
# /card/** = user
# /school/** = user
# /rpc/rest/** = perms[rpc:invoke], authc